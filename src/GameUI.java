import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.layout.GridPane;
import javafx.scene.input.MouseButton;
import javafx.stage.Stage;

public class GameUI extends Application {
    private static final int SIZE = 8; // –†–∞–∑–º–µ—Ä –ø–æ–ª—è
    private static final int MINES = 10; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω
    private Game game; // –õ–æ–≥–∏–∫–∞ –∏–≥—Ä—ã
    private Button[][] buttons; // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–µ—Ç–æ–∫

    @Override
    public void start(Stage primaryStage) {
        game = new Game(SIZE, SIZE, MINES);
        buttons = new Button[SIZE][SIZE];
        GridPane grid = new GridPane();

        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–ª–µ—Ç–∫–∏
        for (int y = 0; y < SIZE; y++) {
            for (int x = 0; x < SIZE; x++) {
                Button btn = new Button();
                btn.setMinSize(40, 40); // –†–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏ (—è—á–µ–π–∫–∏)
                int finalX = x;
                int finalY = y;

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–µ—Ç–∫—É (–ª–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è)
                btn.setOnMouseClicked(e -> {
                    if (e.getButton() == MouseButton.PRIMARY) {
                        handleClick(finalX, finalY); // –õ–µ–≤—ã–π –∫–ª–∏–∫ - –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª–µ—Ç–∫–∏
                    } else if (e.getButton() == MouseButton.SECONDARY) {
                        handleFlag(finalX, finalY); // –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ - —É—Å—Ç–∞–Ω–æ–≤–∫–∞/—Å–Ω—è—Ç–∏–µ —Ñ–ª–∞–≥–∞
                    }
                });

                buttons[y][x] = btn;
                grid.add(btn, x, y);
            }
        }

        // –ù–∞—Å—Ç—Ä–æ–∏–º —Å—Ü–µ–Ω—É
        Scene scene = new Scene(grid, SIZE * 40, SIZE * 40);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Minesweeper");
        primaryStage.show();
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–µ–≤–æ–≥–æ –∫–ª–∏–∫–∞ –º—ã—à—å—é (–æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–ª–µ—Ç–∫–∏)
    private void handleClick(int x, int y) {
        game.openCell(x, y);
        updateUI();

        // –ï—Å–ª–∏ –∫–ª–µ—Ç–∫–∞ —Å –º–∏–Ω–æ–π, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–∏–≥—Ä—ã—à–µ
        if (game.getBoard().getCell(x, y).hasMine()) {
            showAlert("Game Over", "BOOM! You lost.");
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
        if (game.getBoard().checkWin()) {
            showAlert("You Win!", "Congratulations! You found all the mines and won!");
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–≤–æ–≥–æ –∫–ª–∏–∫–∞ –º—ã—à—å—é (—Å—Ç–∞–≤–∏–º/—Å–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥)
    private void handleFlag(int x, int y) {
        game.toggleFlag(x, y);
        updateUI();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    private void updateUI() {
        for (int y = 0; y < SIZE; y++) {
            for (int x = 0; x < SIZE; x++) {
                Cell cell = game.getBoard().getCell(x, y);
                if (cell.isOpened()) {
                    // –ï—Å–ª–∏ –∫–ª–µ—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω –≤–æ–∫—Ä—É–≥ –∏–ª–∏ –º–∏–Ω—É
                    if (cell.hasMine()) {
                        buttons[y][x].setText("üí£");
                    } else {
                        buttons[y][x].setText(cell.getAdjacentMines() == 0 ? "" : String.valueOf(cell.getAdjacentMines()));
                    }
                    buttons[y][x].setDisable(true); // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è
                } else if (cell.isFlagged()) {
                    buttons[y][x].setText("üö©"); // –ï—Å–ª–∏ –∫–ª–µ—Ç–∫–∞ —Ñ–ª–∞–∂–∏—Ä–æ–≤–∞–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–ª–∞–≥
                } else {
                    buttons[y][x].setText(""); // –ò–Ω–∞—á–µ –∫–Ω–æ–ø–∫–∞ –ø—É—Å—Ç–∞
                }
            }
        }
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    private void showAlert(String title, String message) {
        Alert alert = new Alert(AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
